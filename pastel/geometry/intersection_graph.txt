Intersection graph algorithms
=============================

[[Parent]]: geometric_algorithms.txt

Given a set ''V'' of shapes in ''RR^n'', their _intersection graph_ is a 
graph ''(V, E)'', where ''(v_1, v_2) in E sub V^2'' if and only if 
''v_1 nn v_2 != O/''. If there is a problem about the shapes which can
be formulated in terms of their intersection graph, then we call solutions
to these problems _intersection graph algorithms_. Such an abstraction 
turns a geometric question to a topological one, and thus destroys 
information; these problems are actually solved by their geometric 
instances, but any one geometric instance with the required graph 
structure does as well. Two interesting questions include
finding a maximum clique, and a connected component of maximum size.
While the intersection graph abstraction can be helpful in unifying 
discussion, it is a bit dangerous one, since one must be careful in 
applying the results of graph theory. For example, it is well known that 
the general problem of finding a maximum clique in a graph is NP-complete. 
However, at least for some types of intersection graphs there are 
polynomial-time algorithms for solving this problem (e.g. the maximum 
clique of axis-aligned boxes can be found in ''O(n log(n))'' time).
