LightMark documentation system
==============================

[Parent]: pastel.txt

Pastel uses the LightMark documentation system to generate
these web-pages automatically from the .txt documentation 
files that come with Pastel's source-code.

Syntax
------

LightMark uses a slightly modified Markdown syntax for documentation. 
Markdown is both a syntax and a program to convert files from text
files to .html files. The appealing idea behind Markdown is
that these source-text files should also be readable by themself. 
For an example, [see the source for this page](./documentation.txt).

Mathematical notation
---------------------

The Markdown syntax has been extended to embed mathematical notation
via the AsciiMathMl library. This extends the idea of making both 
the document and the source itself readable.
Like Markdown, AsciiMathMl is both a syntax and a program to convert
that syntax into MathMl. This allows one to use mathematical notation 
as is common when communicating through an ascii-only medium 
(newsgroups, emails). For example, using AsciiMathMl, one can type 
`int_0^1 f(x) log(f(x)) dx` to render 

''int_0^1 f(x) log(f(x)) dx'' 

Compare this to other notations (especially Latex) whose sources are 
mostly unreadable.

Documentation tree
------------------

Every file under LightMark is associated with a unique parent file.
This parent-child relation induces a tree where the files are
nodes and edges denote a parent-child relation.
This tree is used to generate various useful information 
automatically to the webpages.

Viewing a documentation page
----------------------------

For a documentation page, a _Back_ link is automatically generated to refer to 
the documentation page of its parent file. The children of the documentation page are 
automatically generated links to under the _Learn more_ heading. Links to documentation 
pages are named after their first heading.

The child source-code files are automatically generated links to under the _Files_ heading. 
Links to source-code files are preceded by a description which can be specified in the 
source-code file. The source-code files are grouped according to a common name without the 
filetype-suffix.

Viewing a source-code file
--------------------------

When viewing a source-code file or the source of a documentation file,
the text is color-coded appropriately. The include commands that refer to the same library 
are converted into links, which allows to browse the source-code associatively. 
The _Documentation_ link is automatically generated to refer to the parent documentation page 
of the source-code file. There is also a link to the containing directory in the directory view.

Viewing the documentation tree
------------------------------

When browsing the source-code through the directory view, the documentation tree is 
explicitly shown in the directory view, where source-code files in a directory are grouped 
further based on their parent files, showing their descriptions.

Specifying a parent file
------------------------

A documentation file specifies its parent file by writing somewhere
in the file 

	[Parent]: name_of_parent.txt 
	
This is actually a link definition 
in Markdown format (in Markdown, link definitions must be referred to
to be generated), guaranteeing that this extension works nicely with
the Markdown source.

A source-code file specifies its parent file by writing somewhere
in the file a comment of the form:

	// Documentation: name_of_documentation.txt

If a documentation page or a source-code file does not specify a parent file,
LightMark gives the file an implicitly-defined parent file. The logic
for this goes as follows:

 * For a source-code file, if in the same directory there is a file 
whose name without the filetype-suffix is a prefix of the source-code file,
and whose filetype-suffix is .txt, choose that file as a parent file. 
If there are multiple such files, choose the one with the longest common prefix.

 * If the search in the current directory failed, go up in the directory 
hierachy and try again. If this is not possible, choose a special orphan file 
as the parent file. This file is useful in making sure that every file is 
correctly associated with a parent file.

 * For a documentation file, choose a special orphan file as the parent file.

Specifying a description
------------------------

A source-code file can be given a description by writing somewhere
in the file a comment of the form:

	// Description: Useful description here

If a source-code file has a description, then all the files with the
same name but with different filetype-suffices are given the same
description.

This description affects the generation of the links under the _Files_
section of the corresponding documentation page. Source-code files
with the same name without the filetype-suffix are grouped under
the same description in alphabetical order.

If a source-code file does not specify a description, LightMark
gives it an implicitly-defined description. This is formed from
taking the name of the source-code file, removing the filetype-suffix,
and making the name start with a capital letter. The grouping
of same-named source-code files again applies.

One can transmit an additional line of information
about the purpose of the file by writing somewhere in the file
a comment of the form:

	// Detail: A more detailed description here

These tags are best placed at the beginning of a file for 
LightMark to find them quickly.

Manual linking
--------------

A link to a source-code file or a documentation page can be specified 
manually to generate a link that has a description as with the automatically
generated links. This is done by the following syntax:

	[Link]: allocators.txt

