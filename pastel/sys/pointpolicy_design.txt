PointPolicy concept design considerations
=========================================

[[Parent]]: pointpolicies.txt

Here we discuss the design considerations of the PointPolicy concept.

Abstraction
-----------

What we are attempting to abstract is

 * the retrieval of the dimension of a point, and
 
 * the retrieval of the elements of a point.

Use-cases
---------

We want to support at least the following use-cases:

 * Store a sequence of points of the same dimensionality, 
 without needing to store the dimension with each point.
 The dimension can be retrieved for each point (although
 it is always the same).
 
 * Store a sequence of points of various dimensionality.
 The dimension can be retrieved for each point (perhaps
 by the storing the dimension with the point).
 
Types
-----

We want to use a pointer to real numbers as a representation
for a point. Thus one can't assume that the point-type is a class.

Solution candidates
-------------------

### Access object

Create a concept for extracting the required information from an
abstract point object. 
