Refinable partition
===================

[[Parent]]: data_structures.txt

The _refinable partition_ data structure is used to store and refine 
the partitioning of a static set of elements.

Definitions
-----------

A _partition_ of a set ''S'' is a set of disjoint non-empty subsets 
''P subset power-set(S)'' such that ''Union P = S''. A partition
''Q'' is called a refinement of a partition ''P'', if each ''p in P''
can be given as a union of some sets in ''Q''. In such a case the ''Q''
is called _finer than_ ''P'', and ''P'' is called _coarser than_ ''Q''.
The coarsest partition is the singleton set ''{S}'', while the finest
partition is the power-set ''power-set(S)''. The refinement relation
is a partial order on the set of partitions. 

Data structure
--------------

The idea of the data structure is the following. When a set in the
partition is wanted to be split into two, this split is denoted
by marking the elements of the other part. Multiple sets in the
partition can be marked this way, perhaps incrementally. The actual
refinement is committed by the `split()` function which splits all 
those sets that have both marked and unmarked elements. The refinable 
partition data structure has the following properties.

### Functionality

 * can provide the list of elements, marked elements, and 
 unmarked elements of a set, in constant time,
 * can provide the containing set of an element, in constant time,
 * can provide the list of those sets which contain both marked
 and unmarked elements, in constant time,
 * can provide the list of elements and blocks in the partition,
 in constant time,
 * can both mark and unmark elements, in constant time,

### Time and space

 * sets are split in constant time when amortized over the
 number of marked elements, and
 * takes O(n) space, where n is the number of elements.
 

