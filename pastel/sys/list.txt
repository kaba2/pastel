Doubly-linked list
==================

[[Parent]]: data_structures.txt

A _doubly-linked list_ is a data structure for storing and manipulating a sequence of elements. 

Types
-----

Generic data structure
: `List`

Stable settings-aliases
: `List_Set`

Properties
----------

The doubly-linked list implementation in Pastel has the following properties:

Task / Property                                                  | Complexity
-----------------------------------------------------------------|------------------------
Insert / remove an element, before a given element.              | ''Theta(1)''
Move an element, before a given element in a given list.         | ''Theta(1)''
Move all elements, from a list to another.                       | ''Theta(1)''
Move a range of ''k'' elements, inside a list.                   | ''Theta(1)''
Move a range of ''k'' elements, from a list to another.          | ''Theta(k)''
Find out the number of elements in a list.                       | ''Theta(1)''
Find out whether an iterator is null / begin / end / normal.     | ''Theta(1)''

Versus `std::list`
------------------

The list implementation in Pastel can be thought of an enhanced `std::list`:

* it can be customized,
* it supports end-data, and
* it uses [enhanced iterators][Enhanced].

[Enhanced]: [[Ref]]: enhanced_iterators.txt
