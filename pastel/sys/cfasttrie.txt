C-fast trie
===========

[[Parent]]: data_structures.txt

The _cfast-trie_ is a data-structure which implements an efficient dynamic ordered dictionary for fixed-size integers. This data-structure is much more efficient than, say, the red-black tree or the deterministic skip-list. For example, the searches in it are local and double-logarithmic, rather than logarithmic. While at first this seems impossible in view of the fact that by using comparisons of elements a logarithmic complexity is necessary, the c-fast trie gets around this problem by concentrating on fixed-size integers in the w-bit RAM model, where multiple comparisons can be carried out in parallel. The first data-structure to realize this was the x-fast trie, which unfortunately takes superlinear space in the number of stored elements. The c-fast trie solves this problem by maintaing a special kind of an x-fast trie, a compact x-fast trie, which can be stored in linear space. Perhaps unexpectedly, this also improves the time-complexities of the data-structure over the x-fast trie.
