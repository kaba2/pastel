LU decomposition
================

[[Parent]]: matrix_decompositions.txt

[[set indent]]: EquationSet

The _LU-decomposition_ of a matrix ''A in RR^{m xx n}'' is a factorization
''A = PLU'', where ''P in RR^{m xx m}'' is a permutation matrix,
''L in RR^{m xx m}'' is a unit lower triangular matrix (has 1's on the diagonal),
and ''U in RR^{m xx n}'' is an upper triangular matrix.

Solving linear systems
----------------------

Consider solving a linear system

	Ax = b,
	
where ''A'' is invertible and has an LU-decomposition.
The problem can be solved in ''O(n^3)'' operations using gaussian
elimination and back substitution (let us exclude
the faster algorithms). This is ok if the matrix
''A'' is involved only once in such an equation. However,
if ''b'' is varied and ''A'' stays constant, then the
LU-decomposition can aid in solving the problems faster.
After LU-decomposing in ''O(n^3)'' time, solutions to varying 
''b'' can be obtained in ''O(n^2)'' time. 
If ''A'' is also positive definite, the linear system can be
solved even faster, although only by a factor,
by the Cholesky decomposition.

Storage convention
------------------

Because ''L'' contains 1's on the diagonal, one can pack
''L'' and ''U'' to the same packed matrix ''E'' by throwing the 
diagonal of ''L'' out:

''E = (L - I) + U''

This packing scheme saves memory. The packed matrix
is what the decomposition object computes.
This packed matrix can be used in solving linear
equations by using the functions 'solveUpperTriangular'
and 'solveUnitLowerTriangular'. However, to make this even
easier, Pastel provides an overload for 'solveLinear'
which takes an LuDecompositionInplace object instead of
a matrix.

See also
--------

[[Link]]: cholesky_decomposition.txt
