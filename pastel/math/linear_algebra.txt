Linear algebra
==============

Theory
------

Every finite n-dimensional vector space over the reals is isomorphic to R^n.
Thus to solve problems in all such spaces, one only needs to develop
computational tools to handle problems in R^n. 
For brevity, let us abbreviate a finite m-dimensional vector space over
the real numbers simply as an m-vector space. For general n-vector spaces, 
the problem is first mapped to R^n (by choosing a suitable basis), 
solved there, and then mapped back to the original domain. 

Of special interest are linear functions between an n-vector space V 
and an m-vector space W. A linear function is simply a function from 
V to W which preserves linear combinations of vectors.
Choosing a basis in V can be used to fix an isomorphism between 
vectors of V and vectors of R^n. Similarly between W and R^m.
However, having fixed both isomorphisms, we have come to fix
an isomorphism between linear functions from V to W and
R^(m x n) matrices.

Matrix algebra is linear algebra in R^n (in our case). 
Because of the isomorphism results, it is a machinery sufficiently powerful 
to answer questions in the theory of linear functions over 
finite dimensional vector spaces. Generalizing, one can allow arbitrary fields
to be used instead of the field of real numbers. Useful alternative 
fields include finite fields, complex numbers, and rational numbers.

Practice
--------

Pastel implements a matrix algebra component where matrices assume
elements from an ordered field. Most importantly, this abstraction 
includes real numbers (modeled with floating point numbers), and rational numbers 
(modeled as a ratio of two integers, allowing exact arithmetic).
For geometric problems and computer graphics, this covers most of the needs.

Learn more
----------

[Matrix class](./matrix.htm)

[Matrix tools](./matrix_tools.htm)

[

Matrix decompositions

Matrix eigenvectors

Generalizations
---------------

Linear algebra deals with linear functions in a vector space. 
One can generalization to several directions. Notably:

1) One can allow general fields for underlying scalars.

2) One can make the condition of preserving linear combinations weaker.
This allows for more general underlying spaces such as the affine space
(see affine transformation class), and the projective space.

3) One can allow subspaces of more than 1 dimensions to be used as primitive.
This gives Grassmann algebra and even more importantly geometric algebra.
The multivectors of geometric algebra are represented by 2^n components 
if the underlying vector space is of dimension n.

4) One can consider linear functions between linear functions.
This gives tensor algebra. Computationally, tensors are represented
by n-dimensional arrays of values compared to the 2-dimensional
representation of matrices. 

We do not generalize to arbitrary fields because
that is rarely needed in computer graphics and geometric
applications. 

In contrast, affine and projective spaces are
very important. Pastel recognizes affine spaces by supplying the
user with separate point and vector classes, as well as a class that
represents affine transformations. Points in projective 
n-space can be embedded into a vector space with dimension n + 1 
(the corresponding coordinate form is commonly known as homogeneous coordinates) 
and be handled with conventional linear algebra followed by a projection.
Because affine n-space can be embedded into the projective n-space, 
affine space can also be handled this way. However, affine 
transformations are most naturally performed in the native space,
as demonstrated by the affine transformation class.

Tensors are rarely needed in our applications, so we do not 
implement matrices as a special case of tensors. 

However, support for geometric algebra is something 
that we consider adding to Pastel in the future.
The advantage of geometric algebra is that it is
very intuitive for geometric problems and can
express more analytical solutions that linear algebra
(for example, 'give the intersection of two 2-dimensional
planes in R^4'). Particularly interesting would be
the geometric algebras of R^2 and R^3.
