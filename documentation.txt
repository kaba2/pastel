Remark documentation system
===========================

[[Parent]]: pastel.txt

Pastel uses the Remark documentation system to generate
these web-pages automatically from the .txt documentation 
files that come with Pastel's source-code.

Syntax
------

Remark uses a slightly modified Markdown syntax for documentation. 
The appealing idea behind Markdown is that the source-text files 
should also be readable by themself. For an example, 
[see the source for this page](./documentation.txt).

### Mathematical notation

The Markdown syntax has been extended to embed mathematical notation
via the AsciiMath syntax. This extends the idea of making both 
the document and the source itself readable. This allows one to use 
mathematical notation as is common when communicating through an 
ascii-only medium (newsgroups, emails). For example, using AsciiMath, 
one can type `int_{-oo}^oo f(x) log(f(x)) dx` to render 

''int_{-oo}^oo f(x) log(f(x)) dx'' 

Compare this to other notations (especially Latex) whose sources are 
mostly unreadable.

Documentation tree
------------------

Every file under Remark is associated with a unique parent file.
This parent-child relation induces a tree where the files are
nodes and edges denote a parent-child relation.
This tree is used to generate various useful information 
automatically to the webpages.

### Viewing a documentation page

For a documentation page, a _Back_ link is automatically generated to refer to 
its parent file. The documentation children are automatically generated links 
to under the _Learn more_ heading. Such links are named after their first 
heading. The source-code children are automatically generated links to under the 
_Files_ heading. These links are preceded by a description which 
can be specified in the source-code file. The source-code files are grouped
under a single description according to the following logic:

 * If a source-code file inherits a parent file from another source-code file,
 then these two files belong to the same group.

### Viewing a source-code file

When viewing a source-code file or the source of a documentation file,
the text is color-coded appropriately. The include commands that refer to the same library 
are converted into links, which allows to browse the source-code associatively. 
The _Documentation_ link is automatically generated to refer to the parent documentation page 
of the source-code file. There is also a link to the containing directory in the directory view.

### Viewing the documentation tree

When browsing the source-code through the directory view, the documentation tree is 
explicitly shown in the directory view, where source-code files in a directory are grouped 
further based on their parent files, showing their descriptions.

Specifying meta-information
---------------------------

### Specifying a parent file

A documentation file specifies its parent file by writing somewhere
in the file 

	[[Parent]]: name_of_parent.txt 
	
A source-code file specifies its parent file by writing somewhere
in the file a comment of the form:

	// Documentation: name_of_documentation.txt

The specified file will be first searched from the current directory,
and then sequantially through parent directories up to the project's 
root directory.

### Specifying a description

A source-code file can be given a description by writing somewhere
in the file a comment of the form:

	// Description: Useful description here

One can transmit an additional line of information
about the purpose of the file by writing somewhere in the file
a comment of the form:

	// Detail: A more detailed description here

These tags are best placed at the beginning of a file for 
Remark to find them quickly.

### Manual linking

A link to a source-code file or a documentation file can be specified 
manually to generate a link that has a description as with the automatically
generated links. This is done by the following syntax:

	[[Link]]: ./pastel/sys/allocators.txt

Implicitly-defined parent file
------------------------------

If a documentation file does not specify a parent file, it is assigned
a special orphan file as the parent file. If a source-code file does not 
specify a parent file, Remark gives the file an implicitly-defined parent 
file. The logic for this goes as follows:

 * In the same directory, search for the longest prefix file (excluding the 
 file itself). Give documentation files (.txt) priority over source-code 
 files (i.e. consider them longer). Do not consider source-code files 
 which do not specify a parent file. If there are multiple candidate 
 source-code files, pick one arbitrarily (Remark reports a warning
 about the ambiguity). 
 
 * If a documentation file is found, use it as a parent file. 

 * If a source-code file is found, use its parent as a parent file. 

 * Otherwise use a special orphan file as a parent file.

